<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
	
	<context:component-scan base-package="com.quest.service"/>
	
<!-- 	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
<!-- 		<property name="location" value="classpath:jdbc.properties"/> -->
<!-- 	</bean> -->
	<!-- destroy-method="close":当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<!-- 数据库基本信息配置 -->  
		<property name = "url" value = "${jdbc.url}" />    
		<property name = "username" value = "${jdbc.username}" />    
		<property name = "password" value = "${jdbc.password}" />    
		<!-- 扩展插件filter:stat、filter:log4j、filter:wall -->
		<property name = "filters" value = "${jdbc.filters}" />    
		 <!-- 最大并发连接数 -->  
		<property name = "maxActive" value = "${jdbc.maxActive}" />  
		<!-- 初始化连接数量 -->  
		<property name = "initialSize" value = "${jdbc.initialSize}" />  
		<!-- 配置获取连接等待超时的时间 -->  
		<property name = "maxWait" value = "${jdbc.maxWait}" />  
		<!-- 最小空闲连接数 -->  
		<property name = "minIdle" value = "${jdbc.minIdle}" />    
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
		<property name = "timeBetweenEvictionRunsMillis" value ="${jdbc.timeBetweenEvictionRunsMillis}" />  
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
		<property name = "minEvictableIdleTimeMillis" value ="${jdbc.minEvictableIdleTimeMillis}" />    
		<property name = "validationQuery" value = "${jdbc.validationQuery}" />    
		<property name = "testWhileIdle" value = "${jdbc.testWhileIdle}" />    
		<property name = "testOnBorrow" value = "${jdbc.testOnBorrow}" />    
		<property name = "testOnReturn" value = "${jdbc.testOnReturn}" />    
		<property name = "maxOpenPreparedStatements" value ="${jdbc.maxOpenPreparedStatements}" />  
		<!-- 打开 removeAbandoned 功能:是否开启自动清理被租借的连接但是又没有还回线程池 -->  
		<property name = "removeAbandoned" value = "${jdbc.removeAbandoned}" />  
		<!-- 1800 秒，也就是 30 分钟 -->  
		<property name = "removeAbandonedTimeout" value ="${jdbc.removeAbandonedTimeout}" />  
		<!-- 关闭 abanded 连接时输出错误日志 -->     
		<property name = "logAbandoned" value = "${jdbc.logAbandoned}" />  
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.quest.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx --> 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	
	
</beans>